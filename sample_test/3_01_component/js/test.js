console.log("test 3-1");

// Vueがロードされてグローバル変数として定義されているか確認
console.assert(typeof Vue !== 'undefined');

const vm = new Vue({
    el: "#app",

    data() {
        return {
            // キー：値

            
        }
    }
});


// JSFIDDLEでconsoleからvmアクセスする用
window.vm = vm;

Vue.config.devtools = true;


// ■UIコンポーネント
// ヘッダー、フッター、リンク、ログインボタン、フォーム等の画面を構成するパーツ（部品）

// ■コンポーネント化のメリット
// ・再利用性が高まり、開発効率が上がる、※クラスと同じような考え
// ・利用されている既存のコンポーネントを使う事で、品質を保てる
// ・コンポーネントを疎結合で作成する事により、保守性が高まる
// ・コンポーネントをカプセル化で作成する事により、開発の範囲が限定される（他に影響を及ぼさない）

